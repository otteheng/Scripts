# Drop from continuous variables
vol.rects2$Q60..NUMBER.OF.PERSONS.IN.HOUSEHOLD[vol.rects2$Q60..NUMBER.OF.PERSONS.IN.HOUSEHOLD > 40 |
vol.rects2$Q60..NUMBER.OF.PERSONS.IN.HOUSEHOLD < 0] <- NA
vol.rects2$Q61..NUMBER.OF.CHILDREN.IN.HOUSEHOLD.AGE.0.TO.5[vol.rects2$Q61..NUMBER.OF.CHILDREN.IN.HOUSEHOLD.AGE.0.TO.5 > 40 |
vol.rects2$Q61..NUMBER.OF.CHILDREN.IN.HOUSEHOLD.AGE.0.TO.5 < 0] <- NA
vol.rects2$Q61..NUMBER.OF.CHILDREN.IN.HOUSEHOLD.AGE.0.TO.5[vol.rects2$Q62..NUMBER.OF.CHILDREN.IN.HOUSEHOLD.AGE.6.TO.12 > 40 |
vol.rects2$Q62..NUMBER.OF.CHILDREN.IN.HOUSEHOLD.AGE.6.TO.12 < 0] <- NA
vol.rects2$Q61..NUMBER.OF.CHILDREN.IN.HOUSEHOLD.AGE.0.TO.5[vol.rects2$Q63..NUMBER.OF.CHILDREN.IN.HOUSEHOLD.AGE.13.TO.17 > 40 |
vol.rects2$Q63..NUMBER.OF.CHILDREN.IN.HOUSEHOLD.AGE.13.TO.17 < 0] <- NA
#------------------------------------------------------------------------#
#                         Create New Variables                           #
#------------------------------------------------------------------------#
# Sum number of children vars into one
vol.rects2 <- vol.rects2 %>% mutate(NUMBER.OF.CHILDREN.UNDER.18 =
rowSums(select(.,Q61..NUMBER.OF.CHILDREN.IN.HOUSEHOLD.AGE.0.TO.5:Q63..NUMBER.OF.CHILDREN.IN.HOUSEHOLD.AGE.13.TO.17)))
# Create Mail Volume Measure
vol.rects2 <- vol.rects2 %>% mutate(MAIL.VOLUME.SUM =
rowSums(select(.,MAIL.VOLUME.BRMR_PRST:MAIL.VOLUME.NPMR_PRST)))
View(vol.rects2)
vol.rects2 <- vol.rects2 %>% mutate(MAIL.VOLUME.SUM2 =
rowSums(select(.,c("MAIL.VOLUME.BRMR_PRST", "MAIL.VOLUME.FCMR",
"MAIL.VOLUME.NPMR_PRST", "MAIL.VOLUME.PEMR",
"MAIL.VOLUME.UAMR"))))
View(vol.rects2[,c("SAMPLE.NUMBER", "SURVEY.YEAR", "MAIL.VOLUME.BRMR_PRST", "MAIL.VOLUME.FCMR",
"MAIL.VOLUME.NPMR_PRST", "MAIL.VOLUME.PEMR",
"MAIL.VOLUME.UAMR", "MAIL.VOLUME.SUM", "MAIL.VOLUME.SUM2")])
View(vol.rects2[,c("SAMPLE.NUMBER", "SURVEY.YEAR", "MAIL.VOLUME.BRMR_PRST", "MAIL.VOLUME.FCMR",
"MAIL.VOLUME.NPMR_PRST", "MAIL.VOLUME.PEMR",
"MAIL.VOLUME.UAMR","MAIL.VOLUME.PKGR_PRST_NP", "MAIL.VOLUME.SUM", "MAIL.VOLUME.SUM2")])
vol.rects2 <- vol.rects2 %>% mutate(MAIL.VOLUME.SUM3 =
rowSums(select(.,c("MAIL.VOLUME.BRMR_PRST", "MAIL.VOLUME.FCMR",
"MAIL.VOLUME.NPMR_PRST", "MAIL.VOLUME.PEMR",
"MAIL.VOLUME.UAMR", "MAIL.VOLUME.PKGR_PRST_NP"))))
View(vol.rects2[,c("SAMPLE.NUMBER", "SURVEY.YEAR", "MAIL.VOLUME.BRMR_PRST", "MAIL.VOLUME.FCMR",
"MAIL.VOLUME.NPMR_PRST", "MAIL.VOLUME.PEMR",
"MAIL.VOLUME.UAMR","MAIL.VOLUME.PKGR_PRST_NP", "MAIL.VOLUME.SUM", "MAIL.VOLUME.SUM2", "MAIL.VOLUME.SUM3")])
# -> Gerhard O
# -> 1/19/2021
# -> Data sets: 2e_HDS
# Load Packages in Library
source('C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Script\\_Package-Library.R')
# Initial Data Sets
raw_data_path_2e <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Clean Data\\HDS\\2e_HDS--Cleaned data"
# Clean Data
graph_path <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Tables & Figures\\2g_HDS"
#------------------------------------------------------------------------#
#                               Run Regressions                          #
#               Testing Hypothesis from Meeting with Peter 1/19/2021     #
#------------------------------------------------------------------------#
# Load volume data (RDA)
load(file = paste(raw_data_path_2e, "2e_volume-rects-new_names.rda", sep = '\\'))
View(vol.new.names)
# -> Gerhard O
# -> 12/23/2020
# -> Data sets: 2b_HDS
library(dplyr)
library(tidyr)
library(tidyverse)
library(stringr)
library(readxl)
# Initial Data Sets
raw_data_path <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Clean Data\\HDS\\2b_HDS--Build mail volume by ID year"
misc_files <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Script\\Misc"
# Clean Data
clean_data_path <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Clean Data\\HDS\\2c_HDS--Merge 2b files"
#------------------------------------------------------------------------#
#                       Merge Aggregate HDS data together                #
#                               Data: 2b_HDS                             #
#------------------------------------------------------------------------#
# Import data sets
file.name.csv <- dir(raw_data_path, pattern=".csv")
csvs_2b = lapply(paste(raw_data_path, file.name.csv, sep = '\\'), read.csv)
# Use merge function that includes _merge
source(paste(misc_files, "full_join_track.R", sep = "\\"))
View(csvs_2b)
View(csvs_2b[[1]])
View(csvs_2b[[2]])
View(csvs_2b[[3]])
View(csvs_2b[[3]])
View(csvs_2b[[7]])
# -> Gerhard O
# -> 12/23/2020
# -> Data sets: 2b_HDS
library(dplyr)
library(tidyr)
library(tidyverse)
library(stringr)
library(readxl)
# Initial Data Sets
raw_data_path <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Clean Data\\HDS\\2b_HDS--Build mail volume by ID year"
misc_files <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Script\\Misc"
# Clean Data
clean_data_path <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Clean Data\\HDS\\2c_HDS--Merge 2b files"
#------------------------------------------------------------------------#
#                       Merge Aggregate HDS data together                #
#                               Data: 2b_HDS                             #
#------------------------------------------------------------------------#
# Import data sets
file.name.csv <- dir(raw_data_path, pattern=".csv")
csvs_2b = lapply(paste(raw_data_path, file.name.csv, sep = '\\'), read.csv)
# Use merge function that includes _merge
source(paste(misc_files, "full_join_track.R", sep = "\\"))
#--------------> Merge Data Sets <--------------#
# Merge Standard Marketing Mail (BRMR) & First Class Mail Received (FCMR)
merged <- csvs_2b[[1]] %>% full_join_track(csvs_2b[[2]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2 = .merge) %>%
# Merge in Non-profit Mail Received (NPMR)
full_join_track(csvs_2b[[4]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4 = .merge) %>%
# Merge in Periodicals Received (PEMR)
full_join_track(csvs_2b[[5]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4_5 = .merge) %>%
# Merge in Packages Received (PKGR)
full_join_track(csvs_2b[[6]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4_5_6 = .merge) %>%
# Merge in Unaddressed Mail Received (UAMR)
full_join_track(csvs_2b[[8]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4_5_6_8 = .merge) %>%
# Merge in First Class Mail Sent (FCMS)
full_join_track(csvs_2b[[3]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4_5_6_8_3 = .merge) %>%
# Merge in Packages Sent (PKGS)
full_join_track(csvs_2b[[7]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4_5_6_8_3_7 = .merge)
View(csvs_2b)
# -> Gerhard O
# -> 12/23/2020
# -> Data sets: 2b_HDS
library(dplyr)
library(tidyr)
library(tidyverse)
library(stringr)
library(readxl)
# Initial Data Sets
raw_data_path <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Clean Data\\HDS\\2b_HDS--Build mail volume by ID year"
misc_files <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Script\\Misc"
# Clean Data
clean_data_path <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Clean Data\\HDS\\2c_HDS--Merge 2b files"
#------------------------------------------------------------------------#
#                       Merge Aggregate HDS data together                #
#                               Data: 2b_HDS                             #
#------------------------------------------------------------------------#
# Import data sets
file.name.csv <- dir(raw_data_path, pattern=".csv")
csvs_2b = lapply(paste(raw_data_path, file.name.csv, sep = '\\'), read.csv)
# Use merge function that includes _merge
source(paste(misc_files, "full_join_track.R", sep = "\\"))
merged <- csvs_2b[[1]] %>% full_join_track(csvs_2b[[2]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T)
merged <- csvs_2b[[1]] %>% full_join_track(csvs_2b[[2]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2 = .merge)
merged <- csvs_2b[[1]] %>% full_join_track(csvs_2b[[2]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2 = .merge)
merged <- csvs_2b[[1]] %>% full_join_track(csvs_2b[[2]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = F)
merged <- csvs_2b[[1]] %>% full_join_track(csvs_2b[[2]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T)
# Merge Standard Marketing Mail (BRMR) & First Class Mail Received (FCMR)
merged <- csvs_2b[[1]] %>% full_join_track(csvs_2b[[2]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2 = .merge)
# -> Gerhard O
# -> 12/23/2020
# -> Data sets: 2b_HDS
library(dplyr)
library(tidyr)
library(tidyverse)
library(stringr)
library(readxl)
# Initial Data Sets
raw_data_path <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Clean Data\\HDS\\2b_HDS--Build mail volume by ID year"
misc_files <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Script\\Misc"
# Clean Data
clean_data_path <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Clean Data\\HDS\\2c_HDS--Merge 2b files"
#------------------------------------------------------------------------#
#                       Merge Aggregate HDS data together                #
#                               Data: 2b_HDS                             #
#------------------------------------------------------------------------#
# Import data sets
file.name.csv <- dir(raw_data_path, pattern=".csv")
csvs_2b = lapply(paste(raw_data_path, file.name.csv, sep = '\\'), read.csv)
# Use merge function that includes _merge
source(paste(misc_files, "full_join_track.R", sep = "\\"))
#--------------> Merge Data Sets <--------------#
# Merge Standard Marketing Mail (BRMR) & First Class Mail Received (FCMR)
merged <- csvs_2b[[1]] %>% full_join_track(csvs_2b[[2]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2 = .merge) %>%
# Merge in Non-profit Mail Received (NPMR)
full_join_track(csvs_2b[[4]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4 = .merge) %>%
# Merge in Periodicals Received (PEMR)
full_join_track(csvs_2b[[5]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4_5 = .merge) %>%
# Merge in Packages Received (PKGR)
full_join_track(csvs_2b[[6]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4_5_6 = .merge) %>%
# Merge in Unaddressed Mail Received (UAMR)
full_join_track(csvs_2b[[8]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4_5_6_8 = .merge)
data1 <- data.frame(x = 1:10, y = rnorm(10))
data2 <- data.frame(x = 4:20, z = rnorm(17))
full_join_track(data1, data2, .merge = T)
devtools::install_github("adamMaier/reviewr", build_opts = c("--no-resave-data", "--no-manual"))
full_join_track <- function(x, y, by = NULL, suffix = c(".x", ".y"),
.merge = FALSE, ...){
# Checking to make sure used variable names are not already in use
if(".x_tracker" %in% names(x)){
message("Warning: variable .x_tracker in left data was dropped")
}
if(".y_tracker" %in% names(y)){
message("Warning: variable .y_tracker in right data was dropped")
}
if(.merge & (".merge" %in% names(x) | ".merge" %in% names(y))){
stop("Variable .merge already exists; change name before proceeding")
}
# Adding simple merge tracker variables to data frames
x[, ".x_tracker"] <- 1
y[, ".y_tracker"] <- 1
# Doing full join
joined <- full_join(x, y, by = by, suffix = suffix,  ...)
# Calculating merge diagnoses
matched <- joined %>%
filter(!is.na(.x_tracker) & !is.na(.y_tracker)) %>%
NROW()
unmatched_x <- joined %>%
filter(!is.na(.x_tracker) & is.na(.y_tracker)) %>%
NROW()
unmatched_y <- joined %>%
filter(is.na(.x_tracker) & !is.na(.y_tracker)) %>%
NROW()
# Print merge diagnoses
message(
unmatched_x, " Rows ONLY from left data frame", "\n",
unmatched_y, " Rows ONLY from right data frame", "\n",
matched, " Rows matched"
)
# Create .merge variable if specified
if(.merge){
joined <- joined %>%
mutate(.merge =
case_when(
!is.na(.$.x_tracker) & is.na(.$.y_tracker) ~ "left_only",
is.na(.$.x_tracker) & !is.na(.$.y_tracker) ~ "right_only",
TRUE ~ "matched"
)
)
}
# Dropping tracker variables and returning data frame
joined <- joined %>%
select(-.x_tracker, -.y_tracker)
return(joined)
}
data1 <- data.frame(x = 1:10, y = rnorm(10))
data2 <- data.frame(x = 4:20, z = rnorm(17))
full_join_track(data1, data2, .merge = T)
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
devtools::install_github("adamMaier/reviewr", build_opts = c("--no-resave-data", "--no-manual"))
full_join_track <- function(x, y, by = NULL, suffix = c(".x", ".y"),
.merge = FALSE, ...){
# Checking to make sure used variable names are not already in use
if(".x_tracker" %in% names(x)){
message("Warning: variable .x_tracker in left data was dropped")
}
if(".y_tracker" %in% names(y)){
message("Warning: variable .y_tracker in right data was dropped")
}
if(.merge & (".merge" %in% names(x) | ".merge" %in% names(y))){
stop("Variable .merge already exists; change name before proceeding")
}
# Adding simple merge tracker variables to data frames
x[, ".x_tracker"] <- 1
y[, ".y_tracker"] <- 1
# Doing full join
joined <- full_join(x, y, by = by, suffix = suffix,  ...)
# Calculating merge diagnoses
matched <- joined %>%
filter(!is.na(.x_tracker) & !is.na(.y_tracker)) %>%
NROW()
unmatched_x <- joined %>%
filter(!is.na(.x_tracker) & is.na(.y_tracker)) %>%
NROW()
unmatched_y <- joined %>%
filter(is.na(.x_tracker) & !is.na(.y_tracker)) %>%
NROW()
# Print merge diagnoses
message(
unmatched_x, " Rows ONLY from left data frame", "\n",
unmatched_y, " Rows ONLY from right data frame", "\n",
matched, " Rows matched"
)
# Create .merge variable if specified
if(.merge){
joined <- joined %>%
mutate(.merge =
case_when(
!is.na(.$.x_tracker) & is.na(.$.y_tracker) ~ "left_only",
is.na(.$.x_tracker) & !is.na(.$.y_tracker) ~ "right_only",
TRUE ~ "matched"
)
)
}
# Dropping tracker variables and returning data frame
joined <- joined %>%
select(-.x_tracker, -.y_tracker)
return(joined)
}
data1 <- data.frame(x = 1:10, y = rnorm(10))
data2 <- data.frame(x = 4:20, z = rnorm(17))
full_join_track(data1, data2, .merge = T)
library(dplyr)
full_join_track <- function(x, y, by = NULL, suffix = c(".x", ".y"),
.merge = FALSE, ...){
# Checking to make sure used variable names are not already in use
if(".x_tracker" %in% names(x)){
message("Warning: variable .x_tracker in left data was dropped")
}
if(".y_tracker" %in% names(y)){
message("Warning: variable .y_tracker in right data was dropped")
}
if(.merge & (".merge" %in% names(x) | ".merge" %in% names(y))){
stop("Variable .merge already exists; change name before proceeding")
}
# Adding simple merge tracker variables to data frames
x[, ".x_tracker"] <- 1
y[, ".y_tracker"] <- 1
# Doing full join
joined <- full_join(x, y, by = by, suffix = suffix,  ...)
# Calculating merge diagnoses
matched <- joined %>%
filter(!is.na(.x_tracker) & !is.na(.y_tracker)) %>%
NROW()
unmatched_x <- joined %>%
filter(!is.na(.x_tracker) & is.na(.y_tracker)) %>%
NROW()
unmatched_y <- joined %>%
filter(is.na(.x_tracker) & !is.na(.y_tracker)) %>%
NROW()
# Print merge diagnoses
message(
unmatched_x, " Rows ONLY from left data frame", "\n",
unmatched_y, " Rows ONLY from right data frame", "\n",
matched, " Rows matched"
)
# Create .merge variable if specified
if(.merge){
joined <- joined %>%
mutate(.merge =
case_when(
!is.na(.$.x_tracker) & is.na(.$.y_tracker) ~ "left_only",
is.na(.$.x_tracker) & !is.na(.$.y_tracker) ~ "right_only",
TRUE ~ "matched"
)
)
}
# Dropping tracker variables and returning data frame
joined <- joined %>%
select(-.x_tracker, -.y_tracker)
return(joined)
}
data1 <- data.frame(x = 1:10, y = rnorm(10))
data2 <- data.frame(x = 4:20, z = rnorm(17))
full_join_track(data1, data2, .merge = T)
library(dplyr)
library(tidyr)
library(tidyverse)
library(stringr)
library(readxl)
# Initial Data Sets
raw_data_path <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Clean Data\\HDS\\2b_HDS--Build mail volume by ID year"
misc_files <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Script\\Misc"
# Clean Data
clean_data_path <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Clean Data\\HDS\\2c_HDS--Merge 2b files"
file.name.csv <- dir(raw_data_path, pattern=".csv")
csvs_2b = lapply(paste(raw_data_path, file.name.csv, sep = '\\'), read.csv)
# Use merge function that includes _merge
source(paste(misc_files, "full_join_track.R", sep = "\\"))
#--------------> Merge Data Sets <--------------#
# Merge Standard Marketing Mail (BRMR) & First Class Mail Received (FCMR)
merged <- csvs_2b[[1]] %>% full_join_track(csvs_2b[[2]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2 = .merge) %>%
# Merge in Non-profit Mail Received (NPMR)
full_join_track(csvs_2b[[4]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4 = .merge) %>%
# Merge in Periodicals Received (PEMR)
full_join_track(csvs_2b[[5]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4_5 = .merge) %>%
# Merge in Packages Received (PKGR)
full_join_track(csvs_2b[[6]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4_5_6 = .merge) %>%
# Merge in Unaddressed Mail Received (UAMR)
full_join_track(csvs_2b[[8]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4_5_6_8 = .merge)
View(csvs_2b[[3]])
View(csvs_2b[[7]])
# -> Gerhard O
# -> 12/23/2020
# -> Data sets: 2b_HDS
library(dplyr)
library(tidyr)
library(tidyverse)
library(stringr)
library(readxl)
# Initial Data Sets
raw_data_path <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Clean Data\\HDS\\2b_HDS--Build mail volume by ID year"
misc_files <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Script\\Misc"
# Clean Data
clean_data_path <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Clean Data\\HDS\\2c_HDS--Merge 2b files"
#------------------------------------------------------------------------#
#                       Merge Aggregate HDS data together                #
#                               Data: 2b_HDS                             #
#------------------------------------------------------------------------#
# Import data sets
file.name.csv <- dir(raw_data_path, pattern=".csv")
csvs_2b = lapply(paste(raw_data_path, file.name.csv, sep = '\\'), read.csv)
# Use merge function that includes _merge
source(paste(misc_files, "full_join_track.R", sep = "\\"))
#--------------> Merge Data Sets <--------------#
# Merge Standard Marketing Mail (BRMR) & First Class Mail Received (FCMR)
merged <- csvs_2b[[1]] %>% full_join_track(csvs_2b[[2]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2 = .merge) %>%
# Merge in Non-profit Mail Received (NPMR)
full_join_track(csvs_2b[[4]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4 = .merge) %>%
# Merge in Periodicals Received (PEMR)
full_join_track(csvs_2b[[5]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4_5 = .merge) %>%
# Merge in Packages Received (PKGR)
full_join_track(csvs_2b[[6]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4_5_6 = .merge) %>%
# Merge in Unaddressed Mail Received (UAMR)
full_join_track(csvs_2b[[8]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4_5_6_8 = .merge) %>%
# Merge in First Class Mail Sent (FCMS)
full_join_track(csvs_2b[[3]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4_5_6_8_3 = .merge) %>%
# Merge in Packages Sent (PGGS)
full_join_track(csvs_2b[[7]],
by = c("SAMPLE.NUMBER", "SURVEY.YEAR"),
.merge = T) %>%
rename(.merge1_2_4_5_6_8_3_7 = .merge)
# This indicates that ID didn't receive X type of mail
merged[is.na(merged)] <- 0
df.new.name <- "2c_mail volume (_merge).csv"
write_csv(merged, path = paste(clean_data_path, df.new.name, sep="\\"),
append=FALSE, col_names=TRUE)
# Remove merge indicator
merged2 <- merged %>% select(-contains(".merge"))
df.new.name <- "2c_mail volume.csv"
write_csv(merged2, path = paste(clean_data_path, df.new.name, sep="\\"),
append=FALSE, col_names=TRUE)
View(merged2)
# -> Gerhard O
# -> 12/28/2020
# -> Data sets: 2c_HDS, 2a_HDS
# Create log file
log_path <- "C:\\Users\\bg4cn0\\Documents\\Gerhard\\R Projects\\Millennials & Mail\\Script\\Log"
savehistory(file= paste(log_path, "2d_HDS.Rhistory", sep = "\\"))
